<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <title>Admin</title>
</head>

<body>
  <header>
    <h1 style="text-align: center">Virtual Clinic</h1>
    <div class="menu">
      <ul class="menu-list">
        <li><a href="/patient/">Home Page</a></li>
      </ul>
    </div>
  </header>

  <main>
    <section style="text-align: center">
      <button id="getFamilyMembersButton">Get Family Members</button>
      <button id="addFamilyMemberButton">Add Family Member</button>
      <button id="getPrescriptionsButton">Get Prescriptions</button>
      <button id="viewAllDoctorsButton">View All Doctors</button>
      <button id="searchDoctorsButton">Search Doctors</button>
      <button id="filterAppointmentsButton">Filter Appointments</button>
      <button id="filterDoctor">Filter Doctors</button>
      <hr />
      <br />
      <br />

      <div id="filteringPrescriptions" style="display: none">
        <!-- Filter Controls -->
        <label id="doctorLabel" for="doctorFilter">Doctor:</label>
        <select id="doctorFilter">
          <option value="">All</option>
          <!--        <option value=""></option>" 
          add -->
        </select>

        <label id=" filledLabel" for="filledFilter">Filled:</label>
        <select id="filledFilter">
          <option value="">All</option>
          <option value="true">Yes</option>
          <option value="false">No</option>
        </select>

        <label id="dateLabel" for="dateFilter">Date:</label>
        <input type="date" id="dateFilter" />

        <button id="applyFilterButtonPrescription">Apply Filter</button>
      </div>

      <div id="filteringDoctors" style="display: none">
        <!-- Filter Controls -->
        <label for="specialityFilter">Speciality:</label>
        <select id="specialityFilter">
          <option value="">All</option>
        </select>

        <label for="dateFilter1">Date:</label>
        <input type="date" id="dateFilter1" />

        <label for="timeFilter">Time:</label>
        <input type="time" id="timeFilter" />

        <button id="applyFilterButtonDoctor">Apply Filter</button>
      </div>


      <div id="filteringAppointments" style="display: none;">
        <!-- Filter Controls -->

        <label id=" statusLabel" for="statusFilter">Status:</label>
        <select id="statusFilter">
          <option value="">All</option>
          <option value="done">Done</option>
          <option value="confirmed">Confirmed</option>
          <option value="scheduled">Scheduled</option>
          <option value="cancelled">Cancelled</option>

        </select>

        <label id="date1Label" for="date1Filter">Start Date:</label>
        <input type="date" id="date1Filter" />

        <label id="date2Label" for="date2Filter">End Date:</label>
        <input type="date" id="date2Filter" />

        <button id="applyFilterButtonForAppointments">Apply Filter</button>
      </div>
      <br> <br>
    </section>

    <style>
      .hidden {
        display: none;
      }
    </style>

    <div id="searchDoctorsForm" class="hidden" style="text-align: center;">

      <label for="search">Search by Name:</label>
      <input type="text" id="search" name="search" placeholder="Search by name" />
      <label for="speciality">Search by speciality:</label>
      <input type="text" id="speciality" name="speciality" placeholder="Filter by speciality" />

      <button id="getSearchResultsButton" type="button">Search</button>
    </div> <br> <br>
    <div id="container"></div>

  </main>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const getFamilyMembersButton = document.getElementById(
        "getFamilyMembersButton"
      );
      const addFamilyMemberButton = document.getElementById(
        "addFamilyMemberButton"
      );
      const getPrescriptionsButton = document.getElementById(
        "getPrescriptionsButton"
      );
      const applyFilterButtonPrescription = document.getElementById("applyFilterButtonPrescription");
      const viewAllDoctorsButton = document.getElementById("viewAllDoctorsButton");
      const searchDoctorsButton = document.getElementById(
        "searchDoctorsButton"
      );
      const getSearchResultsButton = document.getElementById("getSearchResultsButton");
      const filterAppointmentsButton = document.getElementById("filterAppointmentsButton");
      const container = document.getElementById("container");

      const filterDoctor = document.getElementById("filterDoctor");
      const applyFilterButtonDoctor = document.getElementById("applyFilterButtonDoctor");

      getFamilyMembersButton.addEventListener("click", function () {
        hidePrescriptionsFilter();
        hideAppointmentsFilter();
        hideDoctorsFilter();
        hideSearch();
        clearContent();
        fetchFamilyMembers();
      });

      addFamilyMemberButton.addEventListener("click", function () {
        clearContent();
        window.location.href =
          "http://localhost:5000/patient/addFamilyMember";
      });

      getPrescriptionsButton.addEventListener("click", function () {
        hideSearch();
        hideDoctorsFilter();
        hideAppointmentsFilter();
        clearContent();
        fetchPrescriptions();
      });

      viewAllDoctorsButton.addEventListener("click", function () {
        hideSearch();
        hideDoctorsFilter();
        hidePrescriptionsFilter();
        hideAppointmentsFilter();
        clearContent();
        fetchDoctors();
      });

      applyFilterButtonPrescription.addEventListener("click", function () {
        hideSearch();
        fetchFilteredPrescriptions();
        clearContent();
      })
      searchDoctorsButton.addEventListener("click", function () {
        hidePrescriptionsFilter();
        hideAppointmentsFilter();
        hideDoctorsFilter();
        clearContent();
        document.getElementById('searchDoctorsForm').classList.remove('hidden')
      });
      getSearchResultsButton.addEventListener("click", function () {
        fetchSearchedDoctors();
        clearContent();
      });
      filterAppointmentsButton.addEventListener("click", function () {
        hideSearch();
        hidePrescriptionsFilter();
        hideDoctorsFilter();
        fetchAppointments();
        clearContent();
      });
      applyFilterButtonForAppointments.addEventListener("click", function () {
        hideSearch();
        fetchFilteredAppointments();
        clearContent();
      });
      filterDoctor.addEventListener("click", function () {
        hideSearch();
        hidePrescriptionsFilter();
        hideAppointmentsFilter();
        fetchDoctorsWithFilter();
        clearContent();

      })
      applyFilterButtonDoctor.addEventListener("click", function () {
        hideSearch();
        fetchFilteredDoctors();
        clearContent();
      })


      function clearContent() {
        container.innerHTML = "";
        // Reset filter elements
        const doctorFilter = document.getElementById("doctorFilter").value = "";
        const filledFilter = document.getElementById("filledFilter").value = "";
        const dateFilter = document.getElementById("dateFilter").value = "";
        const name = document.getElementById("search").value = "";
        const speciality = document.getElementById("search").value = "";
        const specialityInFilterDoctor = document.getElementById("specialityFilter").value = "";
        const date = document.getElementById("dateFilter1").value = "";
        const time = document.getElementById("timeFilter").value = "";

        const statusFilter = document.getElementById("statusFilter").value = "";
        const date1Input = document.getElementById("date1Filter").value = ""
        const date2Input = document.getElementById("date2Filter").value = ""
      }

      function hidePrescriptionsFilter() {
        document.getElementById("filteringPrescriptions").style.display = "none";
      }

      function hideAppointmentsFilter() {
        document.getElementById("filteringAppointments").style.display = "none";
      }

      function hideDoctorsFilter() {
        document.getElementById("filteringDoctors").style.display = "none";
      }

      function hideSearch() {
        const myDiv = document.getElementById("searchDoctorsForm");
        myDiv.classList.add("hidden");
      }

      function fetchFamilyMembers() {
        fetch(
          "http://localhost:5000/patient/get_family_members/6526d3ad0f83f5e462288362"
        )
          .then((response) => response.json())
          .then((data) => {
            const table = document.createElement("table");
            table.setAttribute("border", "1");
            table.innerHTML = `
                <tr>
                    <th>Name</th>
                    <th>National ID</th>
                    <th>Age</th>
                    <th>Gender</th>
                    <th>Relation to the patient</th>
                </tr>
            `;

            data.forEach((item) => {
              const row = table.insertRow();
              row.insertCell(0).textContent = item.name;
              row.insertCell(1).textContent = item.nationalID;
              row.insertCell(2).textContent = item.age;
              row.insertCell(3).textContent = item.gender;
              row.insertCell(4).textContent = item.relation;
            });

            table.setAttribute("style", "margin: 0 auto;");

            container.appendChild(table);
          })
          .catch((error) => console.error("Error fetching data: ", error));
      }

      function fetchDoctors() {
        fetch("http://localhost:5000/patient/get_all_doctors")
          .then((response) => response.json())
          .then((data) => {
            const table = document.createElement("table");
            table.setAttribute("border", "1");
            table.innerHTML = `
                <tr>
                    <th>Name</th>
                    <th>Speciality</th>
                    <th>Hourly Rate</th>
                </tr>
            `;

            data.forEach((item) => {
              const row = table.insertRow();
              row.insertCell(0).textContent =
                item.firstName + " " + item.lastName;
              row.insertCell(1).textContent = item.speciality;
              row.insertCell(2).textContent = item.hourlyRate;
            });

            table.setAttribute("style", "margin: 0 auto;");

            container.appendChild(table);
          })
          .catch((error) => console.error("Error fetching data: ", error));
      }

      function fetchDoctorsWithFilter() {
        const dropdown = document.getElementById('specialityFilter');
        if (dropdown.options.length === 1) {
          fetch('http://localhost:5000/doctor/getAllSpecialities')
            .then(response => response.json())
            .then(data => {
              const uniqueSpecialities = data;
              for (const speciality of uniqueSpecialities) {
                const option = document.createElement('option');
                option.text = speciality;
                option.value = speciality;
                dropdown.add(option);
              }
            })
            .catch(error => {
              console.error('Error:', error);
            });
        }
        const filterDiv = document.getElementById("filteringDoctors");
        filterDiv.style.display = "block"; // Display the filter controls

        fetch("http://localhost:5000/patient/get_all_doctors")
          .then((response) => response.json())
          .then((data) => {
            const table = document.createElement("table");
            table.setAttribute("border", "1");
            table.innerHTML = `
                <tr>
                    <th>Name</th>
                    <th>Speciality</th>
                    <th>Hourly Rate</th>
                </tr>
            `;

            data.forEach((item) => {
              const row = table.insertRow();
              row.insertCell(0).textContent =
                item.firstName + " " + item.lastName;
              row.insertCell(1).textContent = item.speciality;
              row.insertCell(2).textContent = item.hourlyRate;

              const detailsButton = document.createElement("button");
              detailsButton.textContent = "View Details";
              detailsButton.addEventListener("click", function () {
                fetchDoctorDetails(item._id, container);
              });

              row.insertCell(3).appendChild(detailsButton);
            });


            table.setAttribute("style", "margin: 0 auto;");

            container.appendChild(table);
          })
          .catch((error) => console.error("Error fetching data: ", error));
      }

      function fetchPrescriptions() {
        const filterDiv = document.getElementById("filteringPrescriptions");
        filterDiv.style.display = "block"; // Display the filter controls

        fetch(
          "http://localhost:5000/patient/get_prescriptions_of_patient/6526d30a0f83f5e462288354"
        )
          .then((response) => response.json())
          .then((data) => {
            const table = document.createElement("table");
            table.setAttribute("border", "1");
            table.innerHTML = `
                    <tr>
                    <th>Date</th>
                    <th>Filled</th>
                    <th>Doctor</th>
                    </tr>
                `;

            const doctors = new Set();

            data.forEach((item) => {
                doctors.add(item.doctor.firstName + " " + item.doctor.lastName);
            });
            // Populate the doctor filter select element
            populateDoctorFilter(doctors);

            data.forEach((item) => {
              const row = table.insertRow();
              row.insertCell(0).textContent = new Date(item.date).toLocaleDateString('en-US');
              row.insertCell(1).textContent = item.filled;
              row.insertCell(2).textContent = item.doctor.firstName + " " + item.doctor.lastName;

              const detailsButton = document.createElement("button");
              detailsButton.textContent = "View Details";
              detailsButton.addEventListener("click", function () {
                // Pass the container to fetchPrescriptionDetails
                fetchPrescriptionDetails(item._id, container);
              });

              row.insertCell(3).appendChild(detailsButton);
            });

            table.setAttribute("style", "margin: 0 auto;");

            container.appendChild(table);
          })
          .catch((error) => console.error("Error fetching data: ", error));
      }

      function fetchFilteredPrescriptions() {
        const doctorFilter = document.getElementById("doctorFilter").value;
        const filledFilter = document.getElementById("filledFilter").value;
        const dateInput = document.getElementById("dateFilter").value
        const dateFilter = dateInput.length === 0 ? "" : dateInput + 'T00:00:00.000Z'

        const doctorNameParts = doctorFilter.split(' ');
        const firstName = doctorNameParts[0];

        // Construct the URL with query parameters
        let url = `http://localhost:5000/patient/filter_prescription/6526d30a0f83f5e462288354?`;

        if (doctorFilter) {
          url += `doctor=${encodeURIComponent(firstName)}`;
        }

        if (filledFilter) {
          url += url.slice(-1) === '?' ? '' : '&'
          url += `filled=${filledFilter}`;
        }

        if (dateFilter) {
          url += url.slice(-1) === '?' ? '' : '&'
          url += `date=${dateFilter}`;
        }

        console.log(url)

        fetch(url)
          .then((response) => response.json())
          .then((data) => {
            // Display the filtered prescriptions
            displayFilteredPrescriptions(data);
          })
          .catch((error) => console.error("Error fetching data: ", error));
      }

      function populateDoctorFilter(doctors) {
        const doctorFilter = document.getElementById("doctorFilter");

        // Clear existing options
        doctorFilter.innerHTML = "";

        // Add an "All" option
        const allOption = document.createElement("option");
        allOption.value = "";
        allOption.textContent = "All";
        doctorFilter.appendChild(allOption);

        // Add options for each doctor
        doctors.forEach((doctor) => {
            const option = document.createElement("option");
            option.value = doctor;
            option.textContent = doctor;
            doctorFilter.appendChild(option);
        });
    }

      function displayFilteredPrescriptions(data) {
        const table = document.createElement("table");
        table.setAttribute("border", "1");
        table.innerHTML = `
                    <tr>
                        <th>Date</th>
                        <th>Filled</th>
                        <th>Doctor</th>
                    </tr>
                `;
        console.log(data)
        data.forEach((item) => {
          const row = table.insertRow();
          row.insertCell(0).textContent = new Date(
            item.date
          ).toLocaleDateString("en-US");
          row.insertCell(1).textContent = item.filled;
          row.insertCell(2).textContent = item.doctor.firstName + item.doctor.lastName;

          const detailsButton = document.createElement("button");
          detailsButton.textContent = "View Details";
          detailsButton.addEventListener("click", function () {
            // Pass the container to fetchPrescriptionDetails
            fetchPrescriptionDetails(item._id, container);
          });

          row.insertCell(3).appendChild(detailsButton);
        });

        table.setAttribute("style", "margin: 0 auto;");
        container.appendChild(table);
      }

      function fetchPrescriptionDetails(prescriptionId, container) {
        console.log(
          "Fetching prescription details for ID:",
          prescriptionId
        );
        fetch(
          `http://localhost:5000/patient/select_prescription/${prescriptionId}`
        )
          .then((response) => response.json())
          .then((prescription) => {
            container.innerHTML = "";

            const table = document.createElement("table");
            table.setAttribute("border", "1");
            table.innerHTML = `
                    <tr>
                    <th>Medication Name</th>
                    <th>Frequency</th>
                    <th>Date</th>
                    <th>Filled</th>
                    <th>Doctor</th>
                    </tr>
                `;

            prescription.medications.forEach((medication, index) => {
              const row = table.insertRow();
              row.insertCell(0).textContent = medication.medicationName;
              row.insertCell(1).textContent = medication.frequency;
              if (index === 0) {
                row.insertCell(2).textContent = new Date(
                  prescription.date
                ).toLocaleDateString("en-US");
                row.insertCell(3).textContent = prescription.filled
                  ? "Yes"
                  : "No";
                row.insertCell(4).textContent =
                  prescription.doctor.username; // Assuming 'doctor' contains 'username'
              }
            });

            table.setAttribute("style", "margin: 0 auto;");

            container.innerHTML = ""; // Clear the container
            container.appendChild(table);
            console.log("Prescription Details:", prescription);
          })
          .catch((error) =>
            console.error("Error fetching prescription details: ", error)
          );
      }

      function fetchFilteredDoctors() {

        const specialityInFilterDoctor = document.getElementById("specialityFilter").value;
        const date = document.getElementById("dateFilter1").value;
        const time = document.getElementById("timeFilter").value;
        const datetime = date + 'T' + time + ':00.000Z'
        console.log(datetime)

        let url = "http://localhost:5000/patient/filter_doctors?";


        if (specialityInFilterDoctor) {
          url += `speciality=${specialityInFilterDoctor}`;
        }

        if (date && time) {
          url += url.slice(-1) === '?' ? '' : '&'
          url += `datetime=${datetime}`;
        }

        console.log(url)

        fetch(url)
          .then((response) => response.json())
          .then((data) => {
            // Display the filtered doctors
            displayFilteredDoctors(data);
          })
          .catch((error) => console.error("Error fetching data: ", error));
      }

      function displayFilteredDoctors(data) {
        const table = document.createElement("table");
        table.setAttribute("border", "1");
        table.innerHTML = `
          <tr>
              <th>Name</th>
              <th>Speciality</th>
              <th>Hourly Rate</th>
          </tr>
      `;

        data.forEach((item) => {
          const row = table.insertRow();
          row.insertCell(0).textContent = item.firstName + ' ' + item.lastName;
          row.insertCell(1).textContent = item.speciality;
          row.insertCell(2).textContent = item.hourlyRate;

          const detailsButton = document.createElement("button");
          detailsButton.textContent = "View Details";
          detailsButton.addEventListener("click", function () {
            fetchDoctorDetails(item._id, container);
          });

          row.insertCell(3).appendChild(detailsButton);
        });

        table.setAttribute("style", "margin: 0 auto;");
        container.appendChild(table);
      }

      function searchDoctors() {
        const toggleButton = document.getElementById("searchDoctorsButton");
        const myDiv = document.getElementById("searchDoctorsForm");
        toggleButton.addEventListener("click", () => {
          if (myDiv.classList.contains("hidden")) {
            myDiv.classList.remove("hidden");
          } else {
            myDiv.classList.add("hidden");
          }
        });
      }

      function fetchSearchedDoctors() {
        const name = document.getElementById("search").value
        const speciality = document.getElementById("speciality").value
        console.log(name + " " + speciality)
        console.error(name + " " + speciality)

        // Construct the URL with query parameters
        let url = `http://localhost:5000/patient/search_doctor/?`;


        if (name) {
          url += `name=${name}`;
        }
        console.log(url)

        if (speciality) {
          url += url.slice(-1) === '?' ? '' : '&'
          url += `speciality=${speciality}`;
        }

        console.log(url)

        fetch(url).then((response) => response.json())
          .then((data) => {
            displayDoctors(data);
          })
          .catch((error) => console.error("Error fetching data: ", error));
      }

      function displayDoctors(data) {
        const table = document.createElement("table");
        table.setAttribute("border", "1");
        table.innerHTML = `
                    <tr>
                        <th>Name</th>
                        <th>Speciality</th>
                        <th>Hourly Rate</th>
                    </tr>
                `;

        data.forEach((item) => {
          const row = table.insertRow();
          row.insertCell(0).textContent = item.firstName + ' ' + item.lastName
          row.insertCell(1).textContent = item.speciality;
          row.insertCell(2).textContent = item.hourlyRate;

          const detailsButton = document.createElement("button");
          detailsButton.textContent = "View Details";
          detailsButton.addEventListener("click", function () {
            fetchDoctorDetails(item._id, container);
          });

          row.insertCell(3).appendChild(detailsButton);
        });

        table.setAttribute("style", "margin: 0 auto;");
        container.appendChild(table);
      }

      function fetchDoctorDetails(doctorId, container) {
        console.log(
          "Fetching doctor details for ID:",
          doctorId
        );
        fetch(
          `http://localhost:5000/patient/get_selected_doctor/${doctorId}`
        )
          .then((response) => response.json())
          .then((doctor) => {
            container.innerHTML = "";

            const table = document.createElement("table");
            table.setAttribute("border", "1");
            table.innerHTML = `
                    <tr>
                    <th>Name</th>
                    <th>Speciality</th>
                    <th>Affiliation</th>
                    <th>Educational Background</th>
                    <th>Hourly Rate</th>
                    </tr>
                `;

            const row = table.insertRow();
            row.insertCell(0).textContent = doctor.firstName + ' ' + doctor.lastName;
            row.insertCell(1).textContent = doctor.speciality;
            row.insertCell(2).textContent = doctor.affiliation;
            row.insertCell(3).textContent = doctor.educationalBackground;
            row.insertCell(4).textContent = doctor.hourlyRate

            table.setAttribute("style", "margin: 0 auto;");

            container.innerHTML = ""; // Clear the container
            container.appendChild(table);
            console.log("Doctor Details:", doctor);
          })
          .catch((error) =>
            console.error("Error fetching doctor details: ", error)
          );
      }

      function fetchAppointments() {
        const filterDiv = document.getElementById("filteringAppointments");
        filterDiv.style.display = "block"; // Display the filter controls

        fetch(
          "http://localhost:5000/patient/get_all_appointments/6526d30a0f83f5e462288354"
        )
          .then((response) => response.json())
          .then((data) => {
            const table = document.createElement("table");
            table.setAttribute("border", "1");
            table.innerHTML = `
                    <tr>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Doctor</th>
                    </tr>
                `;

            data.forEach((item) => {
              const row = table.insertRow();
              row.insertCell(0).textContent = new Date(item.date).toLocaleDateString('en-US');
              row.insertCell(1).textContent = item.status;
              row.insertCell(2).textContent = item.doctorId.firstName + " " + item.doctorId.lastName;
            });

            table.setAttribute("style", "margin: 0 auto;");

            container.appendChild(table);
          })
          .catch((error) => console.error("Error fetching data: ", error));
      }

      function fetchFilteredAppointments() {
        const statusFilter = document.getElementById("statusFilter").value;
        const date1Input = document.getElementById("date1Filter").value
        const date1Filter = date1Input.length === 0 ? "" : date1Input + 'T00:00:00.000Z'

        const date2Input = document.getElementById("date2Filter").value
        const date2Filter = date2Input.length === 0 ? "" : date2Input + 'T00:00:00.000Z'

        // Construct the URL with query parameters
        let url = `http://localhost:5000/patient/filter_appointments/6526d30a0f83f5e462288354?`;

        if (statusFilter) {
          url += `status=${statusFilter}`;
        }

        if (date1Filter) {
          url += url.slice(-1) === '?' ? '' : '&'
          url += `date_1=${date1Filter}`;
        }

        if (date2Filter) {
          url += url.slice(-1) === '?' ? '' : '&'
          url += `date_2=${date2Filter}`;
        }

        console.log(url)

        fetch(url)
          .then((response) => response.json())
          .then((data) => {
            displayFilteredAppointments(data.filteredAppointments);
          })
          .catch((error) => console.error("Error fetching data: ", error));
      }

      function displayFilteredAppointments(data) {
        const table = document.createElement("table");
        table.setAttribute("border", "1");
        table.innerHTML = `
                    <tr>
                        <th>Date</th>
                        <th>Status</th>
                        <th>Doctor</th>
                    </tr>
                `;
        console.log(data);
        data.forEach((item) => {
          const row = table.insertRow();
          row.insertCell(0).textContent = new Date(
            item.date
          ).toLocaleDateString("en-US");
          row.insertCell(1).textContent = item.status;
          row.insertCell(2).textContent = item.doctorId.firstName + item.doctorId.lastName;
        });

        table.setAttribute("style", "margin: 0 auto;");
        container.appendChild(table);
      }
    });

  </script>
</body>

</html>